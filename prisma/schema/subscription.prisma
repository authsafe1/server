model Subscription {
    id             String             @id @default(uuid())
    startDate      DateTime           @default(now())
    endDate        DateTime?
    status         SubscriptionStatus @default(INCOMPLETE)
    subscriptionId String             @unique()
    createdAt      DateTime           @default(now())
    updatedAt      DateTime           @updatedAt

    profileId String  @unique
    Profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

    @@index([profileId, subscriptionId])
}

enum SubscriptionStatus {
    ACTIVE
    CANCELLED
    PAST_DUE
    INCOMPLETE
}
